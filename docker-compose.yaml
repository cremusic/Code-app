version: "3.3"

services:
  postgresql:
    image: public.ecr.aws/docker/library/postgres:15-alpine
    restart: "always"
    expose:
      - 5432
    volumes:
      - "./db_data:/var/lib/postgresql/data"
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  cremusic:
    build:
      context: .
      dockerfile: Dockerfile
    image: cremusic
    restart: "always"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgresql
    expose:
      - "8000"
    depends_on:
      - postgresql
    volumes:
      # mount /var/app/statics/sqladmin from container to a named volume
      - "sqladmin-statics:/var/app/statics/sqladmin"
      - ./alembic.ini:/var/app/alembic.ini

  nginx:
    image: public.ecr.aws/docker/library/nginx:1.21-alpine
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      - "sqladmin-statics:/var/app/statics/sqladmin:ro"
      - "./cremusic/static/images:/var/app/statics/images:ro"
    ports:
      - "80:80"
    restart: "always"
    depends_on:
      - cremusic

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    volumes:
      - ./cremusic/static/images:/srv
    expose:
      - "8080"
    env_file:
      - .env
    environment:
      - FB_PORT=8080
      - FB_USERNAME=${ADMIN_USERNAME}
      - FB_PASSWORD=${ADMIN_FILE_BROWSER_PASSWORD}
      - FB_BASEURL=/admin/filemanager/images
    restart: always

volumes:
  sqladmin-statics:

# vim:set et sw=2 ts=2 tw=120 ft=docker-compose.yaml:
